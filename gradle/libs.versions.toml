[versions]
kotlin = "2.2.20"
dokka = "2.1.0-Beta"
otel = "1.54.1"
atomic = "0.27.0"
testcontainers = "1.21.3"
flyway = "11.13.2"
kafka = "4.1.0"

[libraries]
slf4j = { module = "org.slf4j:slf4j-api", version = "2.0.7" }
logback = { module = "ch.qos.logback:logback-classic", version = "1.5.19" }
uuid = { module = "com.benasher44:uuid", version = "0.8.4" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.strictly = "1.8.0" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.7.1-0.6.x-compat" }
atomic = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomic" }

otel-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "otel" }
otel-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "otel" }
micrometer = { module = "io.micrometer:micrometer-core", version = "1.14.3" }

postgres = { module = "org.postgresql:postgresql", version = "42.7.8" }
h2 = { module = "com.h2database:h2", version = "2.4.240" }
hikari = { module = "com.zaxxer:HikariCP", version = "7.0.2" }
jooq = { module = "org.jooq:jooq", version = "3.20.8" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
ktorm = { module = "org.ktorm:ktorm-core", version = "4.1.1" }

kafka-clients = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }

testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

[plugins]
versions = { id = "com.github.ben-manes.versions", version = "0.53.0" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
dokka-javadoc = { id = "org.jetbrains.dokka-javadoc", version.ref = "dokka" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
atomicfu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomic" }
publish = { id = "com.vanniktech.maven.publish", version = "0.34.0" }