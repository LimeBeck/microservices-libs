[versions]
kotlin = "2.0.0"
serialization = "1.6.3"
ktor = "2.3.10"
dokka = "1.9.20"
arrow = "1.2.4"
otel = "1.40.0"
atomic = "0.25.0"
testcontainers = "1.19.8"
flyway = "10.15.2"
kafka = "3.7.1"

[libraries]
slf4j = { module = "org.slf4j:slf4j-api", version = "2.0.7" }
logback = { module = "ch.qos.logback:logback-classic", version = "1.5.6" }
kotlin-css = { module = "org.jetbrains.kotlin-wrappers:kotlin-css", version = "1.0.0-pre.751" }
kotlin-extensions = { module = "org.jetbrains.kotlin-wrappers:kotlin-extensions", version = "1.0.1-pre.751" }
uuid = { module = "com.benasher44:uuid", version = "0.8.4" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.strictly = "1.8.0" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.0" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-ksp = { module = "io.arrow-kt:arrow-optics-ksp-plugin", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
atomic = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomic" }

otel-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "otel" }
otel-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "otel" }
micrometer = { module = "io.micrometer:micrometer-core", version = "1.13.2" }

postgres = { module = "org.postgresql:postgresql", version = "42.7.3" }
h2 = { module = "com.h2database:h2", version = "2.2.224" }
hikari = { module = "com.zaxxer:HikariCP", version = "5.1.0" }
jooq = { module = "org.jooq:jooq", version = "3.19.10" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
ktorm = { module = "org.ktorm:ktorm-core", version = "4.0.0" }

kafka-clients = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }


testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

[plugins]
versions = { id = "com.github.ben-manes.versions", version = "0.51.0" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version = "2.0.0-RC3-1.0.20" }
atomicfu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomic" }
